//=============================================================================
//
// CCameraManagerクラス [CCameraManager.h]
// Author : 野尻　尚希
//
//=============================================================================
#ifndef _CCAMERAMANAGER_H_
#define _CCAMERAMANAGER_H_
//*****************************************************************************
// インクルード
//*****************************************************************************
#include "../MAIN/main.h"
#include "CCamera.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CCameraManager
{
public:
	// コンストラクタ
	CCameraManager(void);

	// デストラクタ
	~CCameraManager(void);

	//=================================================
	// 初期化
	// 引数: 座標、注視点座標
	//=================================================
	void InitCamera(D3DXVECTOR3 pos, D3DXVECTOR3 posR);
	void InitCamera(void){m_pCamera->Init();};

	// 終了
	void Uninit(void);

	// 更新
	void Update(void);

	//=================================================
	// カメラセット(描画とかで呼ぶ)
	// 引数: デバイス
	//=================================================
	void SetCamera(LPDIRECT3DDEVICE9 *pDevice){m_pCamera->SetCamera(pDevice);};

	//=================================================
	// カメラの座標ゲット
	// 戻り値: 座標
	//=================================================
	D3DXVECTOR3 GetCameraPos(void){return m_pCamera->GetCameraPos();};

	//=================================================
	// カメラのフロントベクトルゲット
	// 戻り値: フロントベクトル
	//=================================================
	D3DXVECTOR3 GetVecFront(void){return m_pCamera->GetVecFront();};

	//=================================================
	// カメラのライトベクトルゲット
	// 戻り値: ライトベクトル
	//=================================================
	D3DXVECTOR3 GetVecRight(void){return m_pCamera->GetVecRight();};

	//=================================================
	// カメラの移動量セット
	// 引数: 移動ベクトル
	//=================================================
	void SetMovCamera(D3DXVECTOR3 movVec){m_pCamera->SetMovCamera(movVec);};

	//=================================================
	// カメラのY角度ゲット
	// 戻り値: 角度
	//=================================================
	float GetRotCamera(void){return m_pCamera->GetRotCamera();};

	//=================================================
	// カメラの注視点ゲット
	// 戻り値: 注視点座標
	//=================================================
	D3DXVECTOR3 GetPosRCamera(void){return m_pCamera->GetPosRCamera();};
	
	//=================================================
	// カメラの注視点セット
	// 引数: 座標
	//=================================================
	void SetPosRCamera(D3DXVECTOR3 posR){m_pCamera->SetPosRCamera(posR);};
	
	//=================================================
	// カメラのアドレスゲット
	// 戻り値: カメラのポインタ
	//=================================================
	CCamera* GetAddresCamera(void){return m_pCamera;};
	
	//=================================================
	// カメラの行列ゲット
	// 戻り値: 行列
	//=================================================
	D3DXMATRIX GetMtxView(void){return m_pCamera->GetMtxView();};

	//=================================================
	// カメラの視錐台ゲット
	// 戻り値: 視錐台構造体
	//=================================================
	FRUSTUM& GetFrustum(void){return m_pCamera->GetFrustum();};

private:
	CCamera* m_pCamera;
};

#endif
//----EOF----